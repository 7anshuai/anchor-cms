<!doctype html>
<html class="no-js" lang="">
    <head>
        <meta charset="utf-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">

        <title><?php echo $title; ?></title>

        <meta name="description" content="">
        <meta name="viewport" content="width=1400, initial-scale=1">

		<!-- Compiles from LESS -->
        <link rel="stylesheet" href="/assets/css/admin.css">

        <!-- Compiles from current theme, if it exists -->
        <link rel="stylesheet" href="/themes/current/admin-custom.css">
    </head>
    <body>
    	<div class="flash-message"></div>

    	<nav class="main-nav">
			<ul class="actions">
				<?php foreach(['posts', 'pages', 'categories'] as $url): ?>
				<li><a class="icon-<?php echo $url; ?>" href="/admin/<?php echo $url; ?>"><?php echo ucfirst($url); ?></a></li>
				<?php endforeach; ?>

				<li class="has-dropdown">
					<a class="icon-themes" href="#">Extend</a>

					<ul>
						<li class="icon-themes">
							<a href="/admin/themes">Themes</a>
						</li>

						<li class="icon-plugins">
							<a href="/admin/plugins">Plugins</a>
						</li>
					</ul>
				</li>
			</ul>

    		<a class="anchor-logo">Anchor CMS</a>

    		<ul class="results">
    			<li><a class="icon-users" href="/admin/users">Users</a></li>

    			<li class="has-dropdown">
    				<a class="icon-settings" href="/admin/meta">Settings</a>

    				<ul>
	    				<li>
		    				<a class="icon-metadata" href="/admin/meta">Metadata</a>
	    				</li>

	    				<li>
		    				<a class="icon-custom-fields" href="/admin/fields">Custom fields</a>
	    				</li>

	    				<li>
		    				<a class="icon-variables" href="/admin/vars">Site variables</a>
	    				</li>
    				</ul>
    			</li>

    			<li>
    				<a class="icon-visit-site" href="/">Visit site</a>
    			</li>

    			<li>
    				<a class="icon-logout" href="/admin/logout">Log out</a>
    			</li>
    		</ul>
    	</nav>

        <script>
            (function(d, w) {
                var uri = '<?php echo $uri->getPath(); ?>',
                    nodes = d.querySelectorAll('ul.actions > li, ul.results > li');

                Array.prototype.forEach.call(nodes, function(node) {
                    if(node.classList.contains('has-dropdown')) {
                        Array.prototype.forEach.call(node.querySelectorAll('a'), function(child) {
                            var href = child.getAttribute('href');
                            if(href.indexOf(uri) === 0) node.classList.add('active');
                        });
                    }
                    else {
                        var a = node.querySelector('a'), href = a.getAttribute('href');
                        if(href.indexOf(uri) === 0) node.classList.add('active');
                    }
                });
            })(document, window);
        </script>

		<?php echo $body; ?>

		<script>
			(function(d, w) {
				var dropdowns = d.querySelectorAll('.has-dropdown > a');

				var classy = {
					default: 'open',

					add: function(className) {
						if(classy.has.call(this, classy.default)) {
							return;
						}

						return this.className += (' ' + classy.default);
					},

					remove: function() {
						var classes = this.className.split(' ');
						var index = classes.indexOf(classy.default);

						if(index >= 0) {
							classes.splice(index, 1);

							return this.className = classes.join(' ');
						}
					},

					toggle: function() {
						if(classy.has.call(this, classy.default)) {
							return classy.remove.call(this, classy.default);
						}

						return classy.add.call(this, classy.default);
					},

					has: function() {
						return this.className.split(' ').indexOf(classy.default) >= 0;
					}
				};

				Array.prototype.forEach.call(dropdowns, function(dropdown) {
					dropdown.addEventListener('click', function(e) {
						e.preventDefault();

						classy.toggle.call(this);
					});

					d.addEventListener('click', function(e) {
						if(e.target != dropdown) {
							classy.remove.call(dropdown);
						}
					});
				});

				var tabs = d.querySelectorAll('.editor nav a');
				var targets = d.querySelectorAll('.tab');

				Array.prototype.forEach.call(tabs, function(tab) {
					tab.onclick = function() {
						var target = d.querySelector('#' + this.href.split('#')[1]);

						Array.prototype.forEach.call(tabs, function(otherTab) {
							otherTab.className = '';
						});

						this.className = 'active';

						Array.prototype.forEach.call(targets, function(otherTarget) {
							otherTarget.style.display = 'none';
						});

						target.style.display = 'block';
					};
				});

				if(window.location.hash) {
					d.querySelector('a[href="' + window.location.hash + '"]').click();
				}

				var messages = d.querySelectorAll('.msg');
				var totalMessages = messages.length;
				var exit = function(msg) {
					classy.remove.call(msg);
					msg.className += ' leaving';
				};
				var enter = function(msg, leaving) {
					classy.add.call(msg);

					if(leaving) {
						setTimeout(function() {
							exit(msg);
						}, 2800);
					}
				};

				Array.prototype.forEach.call(messages, function(msg, index) {
					msg.onclick = function() {
						exit(msg);
					};

					setTimeout(function() {
						enter(msg, (index + 1) != totalMessages);
					}, (index === 0 ? 20 : index * 3000));
				});

				var upload = function(file, callback) {
					var token = d.querySelector('input[name=token]').getAttribute('value');

					var request = new XMLHttpRequest();
					request.open('POST', '/admin/media/upload?t='+token, true);

					request.onload = function() {
						try {
							var response = JSON.parse(request.responseText);
							callback(response);
						}
						catch(e) {}
					};

					var form = new FormData();
					form.append('file', file);

					request.send(form);
				};

				var selected = function(event) {
					var input = event.target,
						name = input.getAttribute('name').substring(1),
						target = d.querySelector('input[name=' + name + ']');

					if(input.files.length) {
						upload(input.files[0], function(response) {
							target.setAttribute('value', response.path);
							preview(input);
						});
					}
				};

				var preview = function(input) {
					var name = input.getAttribute('name').substring(1),
						target = d.querySelector('input[name=' + name + ']'),
						value = target.getAttribute('value');

					if(value.length) {
						var img = new Image();
						img.src = value;
						input.parentNode.parentNode.appendChild(img);
					}
				};

				var inputs = d.querySelectorAll('input[type=file]');

				w.addEventListener('DOMContentLoaded', function() {
					Array.prototype.forEach.call(inputs, function(input) {

						input.addEventListener('change', selected);

						preview(input);

					});
				});

			})(document, window);
		</script>
	</body>
</html>
